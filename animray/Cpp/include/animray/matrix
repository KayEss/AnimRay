/*
    Copyright 1995-2010, Kirit Saelensminde. http://www.kirit.com/AnimRay
    Distributed under the Boost Software License, Version 1.0.
    See accompanying file LICENSE_1_0.txt or copy at
        http://www.boost.org/LICENSE_1_0.txt
*/


#ifndef ANIMRAY_MATRIX_HPP
#define ANIMRAY_MATRIX_HPP
#pragma once


#include <animray/homogeneous>


namespace animray {


    /// This 4D matrix class represents transformations in 3D space
    template< typename D >
    class matrix {
        public:
            /// The type of the matrix values
            typedef D coord_type;
            /// The full matrix
            typedef boost::array< coord_type, 16 > value_type;

            /// Construct a transform matrix that does nothing
            matrix()
            : value() {
                value[0] = 1; value[5] = 1; value[10] = 1; value[15] = 1;
            }

            /// Compare for equality
            bool operator == ( const matrix &r ) const {
                return value == r.value;
            }
            /// Compare for inequality
            bool operator != ( const matrix &r ) const {
                return value != r.value;
            }
        private:
            value_type value;
    };


}


#endif // ANIMRAY_MATRIX_HPP
